group 'mint'

//noinspection GroovyAssignabilityCheck
dependencies {
    compile dropwizard, apacheCommonsCodec

    compile(kafka) {
        exclude group: 'org.slf4j'
    }

    compile(postgresClient) {
        exclude group: 'org.slf4j'
    }


    testCompile junit, mockito, zkTest

    testCompile(kafkaTest){
        exclude group: 'org.slf4j'
    }
}


jar.baseName = "mint"

jar {
    doFirst {
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        } {
            exclude "META-INF/*.SF"
            exclude "META-INF/*.DSA"
            exclude "META-INF/*.RSA"
        }

        manifest {
            attributes(
                    "Main-Class": "uk.gov.Application",
                    "Class-Path": configurations.runtime.findAll { !it.directory }.collect { it.name }.join(' ')
            )
        }
    }
}

assemble {
    doLast {
        new File("app/deploy/mint.jar").bytes = new File("app/build/libs/mint.jar").bytes
        createDeployableBundle.execute()
    }
}

task createDeployableBundle(type: Zip) {
    Map env = System.getenv()
    baseName("mint-${env.'TRAVIS_BRANCH'}-${env.'TRAVIS_BUILD_NUMBER'}-${env.'TRAVIS_COMMIT'}")
    from('deploy/')
    include('*')
    include('scripts/*')
    destinationDir file('deployable_bundle') // directory that you want your archive to be placed in
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
