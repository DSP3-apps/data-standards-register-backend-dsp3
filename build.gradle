apply plugin: 'java'
apply plugin: 'idea'
apply from: 'external-dependencies.gradle'
apply from: 'idea-config.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

group 'presentation'

repositories {
    mavenCentral()
}

//noinspection GroovyAssignabilityCheck
configurations {
    compile.exclude module: 'slf4j-log4j12'
    compile.exclude module: 'slf4j-simple' // dropwizard uses logback, not slf4j-simple
}
dependencies {
    compile dropwizard, kafka, postgresClient

    testCompile dropwizardTest, junit, kafkaTest, zkTest
}

jar.baseName = 'presentation'

jar {
    doFirst {
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }

        manifest {
            attributes(
                    "Main-Class": "uk.gov.register.presentation.app.PresentationApplication",
                    "Class-Path": configurations.runtime.findAll { !it.directory }.collect { it.name }.join(' ')
            )
        }
    }
}


task startPresentationApp {
    ProcessBuilder builder = new ProcessBuilder("java", "-cp", sourceSets.test.runtimeClasspath.join(":"), "uk.gov.register.presentation.functional.testSupport.PresentationApplicationRunner", "server", "src/test/resources/test-app-config.yaml").directory(projectDir.absoluteFile)
    builder.redirectError(ProcessBuilder.Redirect.to(new File(buildDir, 'stderr.txt')))
    builder.redirectOutput(ProcessBuilder.Redirect.to(new File(buildDir, 'stdout.txt')))
    project.ext.runningPresentationApp = builder.start()
}

task stopApp << {
    runningPresentationApp?.destroyForcibly()?.waitFor()
}

test {
    finalizedBy stopApp
    dependsOn << startPresentationApp
    doFirst {
        sleep(10000)
    }
}

task stage(dependsOn: ['assemble'])
